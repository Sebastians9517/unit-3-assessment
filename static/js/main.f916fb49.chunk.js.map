{"version":3,"sources":["components/CircleSelector/CircleSelector.jsx","components/Circles/Circles.jsx","App.js","reportWebVitals.js","index.js"],"names":["CircleSelector","props","className","circleNo","map","circle","idx","selectedCircleIdx","onClick","handleCircleSelection","Circles","height","App","state","selectedCircle","newIdx","setState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAoBeA,G,YAjBQ,SAACC,GACpB,OACI,qBAAKC,UAAU,iBAAf,SAEKD,EAAME,SAASC,KAAI,SAACC,EAAQC,GAAT,OAChB,wBAEIJ,UAAWD,EAAMM,oBAAsBD,EAAM,WAAa,QAC1DE,QAAS,kBAAMP,EAAMQ,sBAAsBH,IAH/C,SAKKL,EAAMM,oBAAsBD,EAA5B,iBAA4CA,EAAI,EAAhD,qCAAgFA,EAAI,IAJhFD,UCNnBF,G,MAAW,CAAC,IAAK,IAAK,IAAK,MAiBlBO,EAhBC,SAACT,GACb,OACI,qBAAKC,UAAU,UAAf,SACCD,EAAME,SAASC,KAAI,SAACC,EAAQC,GAAT,OAElB,qBACEK,OAAO,MACPT,UAAWD,EAAMM,oBAAsBD,EAAM,WAAa,QAE1DE,QAAS,kBAAMP,EAAMQ,sBAAsBH,IAJ7C,UAKOH,EAASG,GAAd,GAFKD,SCPXF,EAAW,CAAC,IAAK,IAAK,IAAK,KA+BlBS,E,4MA7BbC,MAAO,CACLC,eAAgB,G,EAGlBL,sBAAwB,SAACM,GACvB,EAAKC,SAAS,CAAET,kBAAmBQ,K,uDAInC,OACE,sBAAKb,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SAA+B,2DAC/B,iCACE,cAAC,EAAD,CACEO,sBAAuBQ,KAAKR,sBAC5BN,SAAUA,EACVI,kBAAmBU,KAAKJ,MAAMN,oBAEhC,cAAC,EAAD,CACEE,sBAAuBQ,KAAKR,sBAC5BN,SAAUA,EACVI,kBAAmBU,KAAKJ,MAAMN,8B,GAtBxBW,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f916fb49.chunk.js","sourcesContent":["import React from 'react';\nimport \"./CircleSelector.css\";\n\nconst CircleSelector = (props) => {\n    return (\n        <div className=\"CircleSelector\">\n            {/* <p>Circle Selector</p> */}\n            {props.circleNo.map((circle, idx) =>\n                <button\n                    key={circle}\n                    className={props.selectedCircleIdx === idx ? \"selected\" : \"color\"}\n                    onClick={() => props.handleCircleSelection(idx)}\n                >\n                    {props.selectedCircleIdx === idx ? `Circle ${idx+1} Selected` : `Select Circle ${idx+1}`}\n                </button>\n            )}\n        </div>\n    )\n}\n\nexport default CircleSelector;\n","import React from 'react';\nimport \"./Circles.css\";\n\nconst circleNo = [\"0\", \"1\", \"2\", \"3\"]\nconst Circles = (props) => {\n    return (\n        <div className='Circles'>\n        {props.circleNo.map((circle, idx) =>\n\n          <div\n            height=\"100\"\n            className={props.selectedCircleIdx === idx ? \"selected\" : \"color\"}\n            key={circle}\n            onClick={() => props.handleCircleSelection(idx)}\n          >{1 + +circleNo[idx]}</div>\n        )}\n      </div>\n    );\n  }\n\nexport default Circles;\n","import React, { Component } from 'react';\nimport './App.css';\nimport CircleSelector from \"./components/CircleSelector/CircleSelector\";\nimport Circles from \"./components/Circles/Circles\";\n\nconst circleNo = [\"0\", \"1\", \"2\", \"3\"]\nclass App extends Component {\n  state ={\n    selectedCircle: 0\n  }\n\n  handleCircleSelection = (newIdx) => {\n    this.setState({ selectedCircleIdx: newIdx})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\"><h1>UNIT 3 FINAL ASSESSMENT</h1></header>\n        <main>\n          <CircleSelector\n            handleCircleSelection={this.handleCircleSelection}\n            circleNo={circleNo}\n            selectedCircleIdx={this.state.selectedCircleIdx}\n          />\n          <Circles\n            handleCircleSelection={this.handleCircleSelection}\n            circleNo={circleNo}\n            selectedCircleIdx={this.state.selectedCircleIdx}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}